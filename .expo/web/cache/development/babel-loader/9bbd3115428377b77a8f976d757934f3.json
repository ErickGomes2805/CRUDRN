{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ListItem, Avatar } from \"react-native-elements\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport firebase from \"../database/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UserScreen = function UserScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    firebase.db.collection(\"users\").onSnapshot(function (querySnapshot) {\n      var users = [];\n      querySnapshot.docs.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            name = _doc$data.name,\n            email = _doc$data.email,\n            phone = _doc$data.phone;\n\n        users.push({\n          id: doc.id,\n          name: name,\n          email: email,\n          phone: phone\n        });\n      });\n      setUsers(users);\n    });\n  }, []);\n  return _jsxs(ScrollView, {\n    children: [_jsx(Button, {\n      onPress: function onPress() {\n        return props.navigation.navigate(\"CreateUserScreen\");\n      },\n      title: \"Create User\"\n    }), users.map(function (user) {\n      return _jsxs(ListItem, {\n        bottomDivider: true,\n        onPress: function onPress() {\n          props.navigation.navigate(\"UserDetailScreen\", {\n            userId: user.id\n          });\n        },\n        children: [_jsx(ListItem.Chevron, {}), _jsx(Avatar, {\n          source: {\n            uri: \"https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg\"\n          },\n          rounded: true\n        }), _jsxs(ListItem.Content, {\n          children: [_jsx(ListItem.Title, {\n            children: user.name\n          }), _jsx(ListItem.Subtitle, {\n            children: user.email\n          })]\n        })]\n      }, user.id);\n    })]\n  });\n};\n\nexport default UserScreen;","map":{"version":3,"sources":["C:/Users/Erick/react-native-crud/telas/UserList.js"],"names":["React","useState","useEffect","ListItem","Avatar","ScrollView","firebase","UserScreen","props","users","setUsers","db","collection","onSnapshot","querySnapshot","docs","forEach","doc","data","name","email","phone","push","id","navigation","navigate","map","user","userId","uri"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,uBAAjC;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,OAAOC,QAAP;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,kBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,QAAQ,CAACK,EAAT,CAAYC,UAAZ,CAAuB,OAAvB,EAAgCC,UAAhC,CAA2C,UAACC,aAAD,EAAmB;AAC5D,UAAML,KAAK,GAAG,EAAd;AACAK,MAAAA,aAAa,CAACC,IAAd,CAAmBC,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClC,wBAA+BA,GAAG,CAACC,IAAJ,EAA/B;AAAA,YAAQC,IAAR,aAAQA,IAAR;AAAA,YAAcC,KAAd,aAAcA,KAAd;AAAA,YAAqBC,KAArB,aAAqBA,KAArB;;AACAZ,QAAAA,KAAK,CAACa,IAAN,CAAW;AACTC,UAAAA,EAAE,EAAEN,GAAG,CAACM,EADC;AAETJ,UAAAA,IAAI,EAAJA,IAFS;AAGTC,UAAAA,KAAK,EAALA,KAHS;AAITC,UAAAA,KAAK,EAALA;AAJS,SAAX;AAMD,OARD;AASAX,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACE,MAAC,UAAD;AAAA,eACE,KAAC,MAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAMD,KAAK,CAACgB,UAAN,CAAiBC,QAAjB,CAA0B,kBAA1B,CAAN;AAAA,OADX;AAEE,MAAA,KAAK,EAAC;AAFR,MADF,EAKGhB,KAAK,CAACiB,GAAN,CAAU,UAACC,IAAD,EAAU;AACnB,aACE,MAAC,QAAD;AAEE,QAAA,aAAa,MAFf;AAGE,QAAA,OAAO,EAAE,mBAAM;AACbnB,UAAAA,KAAK,CAACgB,UAAN,CAAiBC,QAAjB,CAA0B,kBAA1B,EAA8C;AAC5CG,YAAAA,MAAM,EAAED,IAAI,CAACJ;AAD+B,WAA9C;AAGD,SAPH;AAAA,mBASE,KAAC,QAAD,CAAU,OAAV,KATF,EAUE,KAAC,MAAD;AACE,UAAA,MAAM,EAAE;AACNM,YAAAA,GAAG,EACD;AAFI,WADV;AAKE,UAAA,OAAO;AALT,UAVF,EAiBE,MAAC,QAAD,CAAU,OAAV;AAAA,qBACE,KAAC,QAAD,CAAU,KAAV;AAAA,sBAAiBF,IAAI,CAACR;AAAtB,YADF,EAEE,KAAC,QAAD,CAAU,QAAV;AAAA,sBAAoBQ,IAAI,CAACP;AAAzB,YAFF;AAAA,UAjBF;AAAA,SACOO,IAAI,CAACJ,EADZ,CADF;AAwBD,KAzBA,CALH;AAAA,IADF;AAkCD,CArDD;;AAuDA,eAAehB,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, StyleSheet } from \"react-native\";\r\nimport { ListItem, Avatar } from \"react-native-elements\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nimport firebase from \"../database/firebase\";\r\n\r\nconst UserScreen = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase.db.collection(\"users\").onSnapshot((querySnapshot) => {\r\n      const users = [];\r\n      querySnapshot.docs.forEach((doc) => {\r\n        const { name, email, phone } = doc.data();\r\n        users.push({\r\n          id: doc.id,\r\n          name,\r\n          email,\r\n          phone,\r\n        });\r\n      });\r\n      setUsers(users);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView>\r\n      <Button\r\n        onPress={() => props.navigation.navigate(\"CreateUserScreen\")}\r\n        title=\"Create User\"\r\n      />\r\n      {users.map((user) => {\r\n        return (\r\n          <ListItem\r\n            key={user.id}\r\n            bottomDivider\r\n            onPress={() => {\r\n              props.navigation.navigate(\"UserDetailScreen\", {\r\n                userId: user.id,\r\n              });\r\n            }}\r\n          >\r\n            <ListItem.Chevron />\r\n            <Avatar\r\n              source={{\r\n                uri:\r\n                  \"https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg\",\r\n              }}\r\n              rounded\r\n            />\r\n            <ListItem.Content>\r\n              <ListItem.Title>{user.name}</ListItem.Title>\r\n              <ListItem.Subtitle>{user.email}</ListItem.Subtitle>\r\n            </ListItem.Content>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default UserScreen;"]},"metadata":{},"sourceType":"module"}